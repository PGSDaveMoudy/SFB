# Enhanced Nginx Configuration for A+ SSL Rating
# Place this in your Nginx server block configuration

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.portwoodglobalsolutions.com;

    # SSL Certificate Configuration
    ssl_certificate /path/to/fullchain.pem;
    ssl_certificate_key /path/to/privkey.pem;

    # Enhanced SSL Security Configuration for A+ Rating
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # OCSP Stapling for A+ Rating
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # SSL Session Settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    # DH Parameters (generate with: openssl dhparam -out dhparam.pem 4096)
    ssl_dhparam /path/to/dhparam.pem;

    # Enhanced Security Headers for A+ Rating
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), bluetooth=(), accelerometer=(), gyroscope=(), magnetometer=(), ambient-light-sensor=()" always;
    
    # Content Security Policy optimized for Form Builder
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.quilljs.com https://cdnjs.cloudflare.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.quilljs.com https://cdnjs.cloudflare.com; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com data:; img-src 'self' data: https: blob:; connect-src 'self' https://login.salesforce.com https://test.salesforce.com https://*.force.com https://*.salesforce.com wss://*.salesforce.com; frame-src 'self' https://*.salesforce.com; frame-ancestors 'self'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;" always;
    
    # Remove server tokens for security
    server_tokens off;

    # Proxy configuration to Node.js application
    location / {
        proxy_pass http://localhost:8443;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name www.portwoodglobalsolutions.com portwoodglobalsolutions.com;
    return 301 https://www.portwoodglobalsolutions.com$request_uri;
}

# Redirect non-www to www
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name portwoodglobalsolutions.com;
    
    # SSL Certificate Configuration (same as above)
    ssl_certificate /path/to/fullchain.pem;
    ssl_certificate_key /path/to/privkey.pem;
    
    return 301 https://www.portwoodglobalsolutions.com$request_uri;
}

# Commands to implement:
# 1. Generate DH parameters: sudo openssl dhparam -out /etc/nginx/dhparam.pem 4096
# 2. Test configuration: sudo nginx -t
# 3. Reload Nginx: sudo systemctl reload nginx
# 4. Test SSL: https://www.ssllabs.com/ssltest/analyze.html?d=www.portwoodglobalsolutions.com
# OPTIMIZED NGINX CONFIGURATION FOR A+ SSL LABS RATING
# This configuration addresses all issues found in the SSL Labs test

# Main server block for HTTPS
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.portwoodglobalsolutions.com;

    # SSL Certificate Configuration
    ssl_certificate /path/to/fullchain.pem;
    ssl_certificate_key /path/to/privkey.pem;
    
    # Intermediate certificate for proper chain
    ssl_trusted_certificate /path/to/chain.pem;

    # ENHANCED SSL/TLS CONFIGURATION FOR A+ RATING
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # Optimized cipher suites that work with all browsers
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305';
    
    # Let clients choose for better compatibility
    ssl_prefer_server_ciphers off;
    
    # OCSP STAPLING - CRITICAL FOR A+ RATING
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_stapling_file /path/to/ocsp.resp; # Optional: pre-fetched OCSP response
    resolver 8.8.8.8 8.8.4.4 1.1.1.1 valid=300s;
    resolver_timeout 10s;
    
    # SSL Session Configuration
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    # DH Parameters for Perfect Forward Secrecy
    ssl_dhparam /path/to/dhparam.pem;
    
    # SECURITY HEADERS - SINGLE SOURCE TO AVOID DUPLICATION
    # HSTS - Critical for A+ rating (ONLY SET HERE, NOT IN APPLICATION)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Core security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Permissions Policy (comprehensive)
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), bluetooth=(), accelerometer=(), gyroscope=(), magnetometer=(), ambient-light-sensor=(), autoplay=(), encrypted-media=(), fullscreen=(), picture-in-picture=()" always;
    
    # Enhanced CSP for Form Builder (allows necessary resources while maintaining security)
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.quilljs.com https://cdnjs.cloudflare.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.quilljs.com https://cdnjs.cloudflare.com; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com data:; img-src 'self' data: https: blob:; connect-src 'self' https://login.salesforce.com https://test.salesforce.com https://*.force.com https://*.salesforce.com wss://*.salesforce.com; frame-src 'self' https://*.salesforce.com; frame-ancestors 'self'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;" always;
    
    # Hide server information
    server_tokens off;
    more_clear_headers Server;
    
    # Additional security headers
    add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive" always;
    add_header Cross-Origin-Embedder-Policy "require-corp" always;
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Resource-Policy "same-origin" always;

    # PROXY CONFIGURATION TO NODE.JS APPLICATION
    location / {
        # Basic proxy settings
        proxy_pass http://localhost:8443;
        proxy_http_version 1.1;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        
        # Essential headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Timeouts
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 60s;
        
        # Caching
        proxy_cache_bypass $http_upgrade;
        proxy_no_cache $http_upgrade;
        
        # Buffer settings
        proxy_buffering off;
        proxy_request_buffering off;
    }
    
    # Static files optimization (if served directly by Nginx)
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://localhost:8443;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
    }
    
    # Security.txt (optional but good practice)
    location /.well-known/security.txt {
        return 200 "Contact: security@portwoodglobalsolutions.com\nExpires: 2026-12-31T23:59:59.000Z\nEncryption: https://keys.openpgp.org/search?q=security@portwoodglobalsolutions.com\nPreferred-Languages: en\nCanonical: https://www.portwoodglobalsolutions.com/.well-known/security.txt";
        add_header Content-Type text/plain;
    }
}

# REDIRECT HTTP TO HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name www.portwoodglobalsolutions.com portwoodglobalsolutions.com;
    
    # Security headers even for redirects
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    return 301 https://www.portwoodglobalsolutions.com$request_uri;
}

# REDIRECT NON-WWW TO WWW (SSL)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name portwoodglobalsolutions.com;
    
    # Minimal SSL config for redirect
    ssl_certificate /path/to/fullchain.pem;
    ssl_certificate_key /path/to/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # Security headers for redirect
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    return 301 https://www.portwoodglobalsolutions.com$request_uri;
}

# IMPLEMENTATION CHECKLIST:
# 1. Generate DH parameters: openssl dhparam -out /etc/nginx/dhparam.pem 4096
# 2. Verify certificate chain: openssl verify -CAfile chain.pem fullchain.pem
# 3. Test OCSP: openssl ocsp -issuer chain.pem -cert fullchain.pem -text -url http://r11.o.lencr.org
# 4. Test configuration: nginx -t
# 5. Reload Nginx: systemctl reload nginx
# 6. Test SSL Labs: https://www.ssllabs.com/ssltest/analyze.html?d=www.portwoodglobalsolutions.com

# EXPECTED RESULTS:
# - SSL Labs Grade: A+
# - OCSP Stapling: Yes
# - HSTS: Valid (single header)
# - Forward Secrecy: Yes (robust)
# - Certificate Chain: Complete
# - All security headers present
# - No mixed content warnings